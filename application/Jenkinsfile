pipeline {
    agent {
        kubernetes {
            yaml """
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: kaniko-job
spec:
  containers:
  - name: kaniko
    image: gcr.io/kaniko-project/executor:latest
    command:
      - cat
    tty: true
    volumeMounts:
      - name: kaniko-secret
        mountPath: /kaniko/.docker
      - name: workspace-volume
        mountPath: /workspace
  volumes:
    - name: kaniko-secret
      secret:
        secretName: dockerhub-secret
    - name: workspace-volume
      emptyDir: {}
"""
        }
    }

    environment {
        DOCKER_IMAGE = "b4w4rzr1ng/jenkins"
    }

    stages {
        stage('Checkout Code') {
            steps {
                container('kaniko') {
                    dir("/workspace") {
                        git 'https://github.com/Bawar-Zring/Jenkins-CI-CD.git'
                    }
                }
            }
        }

        stage('Build & Push Image with Kaniko') {
            steps {
                container('kaniko') {
                    sh '''
                    /kaniko/executor \
                      --dockerfile=/workspace/application/Dockerfile \
                      --context=/workspace \
                      --destination=${DOCKER_IMAGE}:${BUILD_NUMBER} \
                      --destination=${DOCKER_IMAGE}:latest \
                      --skip-tls-verify
                    '''
                }
            }
        }

        stage('Deploy to EKS') {
            steps {
                container('kaniko') {
                    sh '''
                    kubectl set image deployment/your-deployment your-container=${DOCKER_IMAGE}:${BUILD_NUMBER} -n your-namespace
                    '''
                }
            }
        }
    }
}
