pipeline {
    agent any

    environment {
        IMAGE_NAME = "b4w4rzr1ng/jenkins"
        IMAGE_TAG = "${BUILD_NUMBER}"
    }

    stages {
        stage('Clone Repo') {
            steps {
                git 'https://github.com/Bawar-Zring/Jenkins-CI-CD.git'
            }
        }

        stage('Build and Push with Kaniko') {
            steps {
                script {
                    sh """
                    # Create a Kubernetes job YAML on-the-fly
                    cat <<EOF > kaniko-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: kaniko-job-${BUILD_NUMBER}
spec:
  template:
    spec:
      containers:
      - name: kaniko
        image: gcr.io/kaniko-project/executor:latest
        args:
          - "--dockerfile=/workspace/application/Dockerfile"  
          - "--context=/workspace/application"  
          - "--destination=docker.io/${IMAGE_NAME}:${IMAGE_TAG}"
          - "--destination=docker.io/${IMAGE_NAME}:latest"
        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: kaniko-secret
            mountPath: /kaniko/.docker
      restartPolicy: Never
      volumes:
        - name: workspace
          emptyDir: {}
        - name: kaniko-secret
          secret:
            secretName: regcred
EOF

                    kubectl apply -f kaniko-job.yaml
                    kubectl wait --for=condition=complete job/kaniko-job-${BUILD_NUMBER} --timeout=300s
                    kubectl delete job kaniko-job-${BUILD_NUMBER}
                    """
                }
            }
        }
    }
}
